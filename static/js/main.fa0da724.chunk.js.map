{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","constants.ts","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","isFirstPage","isLastPage","length","className","classNames","disabled","href","onClick","map","page","active","items","itemsPerPageList","defaultItemsPerPage","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","endItem","startItem","visibleItems","id","value","onChange","event","target","Number","item","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAC7CM,EAA8B,IAAhBL,EACdM,EAAaJ,EAAWK,SAAWP,EAEzC,OACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAAUL,IAHd,SAOE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,WACFP,GACHJ,EAAaD,EAAc,IAPjC,oBAeDE,EAAWW,KAAI,SAAAC,GAAI,OAClB,oBACEN,UAAWC,IACT,YACA,CACEM,OAAQf,IAAgBc,IAJ9B,SASE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IACb,YACA,CACEC,SAAUJ,IAHd,SAOE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WACFN,GACHL,EAAaD,EAAc,IAPjC,wBCpEKgB,EAAQzB,EAAW,EAFD,IAG5BsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPsB,EAAmB,CAAC,EAAG,EAAG,GAAI,IAC9BC,EAAsBD,EAAiB,GCKvCE,EAAgB,WAC3B,MAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBuB,EAApB,KAEIC,EAAUxB,EAAcqB,EACtBI,EAAYD,EAAUH,EAAe,EAEvCG,EAAUR,EAAMT,SAClBiB,EAAUR,EAAMT,QAGlB,IAAMmB,EAAenC,EAAWkC,EAAWD,GAa3C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCyB,EADjC,cACgDD,EADhD,eAC8DR,EAAMT,OADpE,OAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOP,EACPQ,SAtBuB,SAACC,GAChC,IAAQF,EAAUE,EAAMC,OAAhBH,MAERN,EAAgBU,OAAOJ,IACvBL,EAAe,IAaT,SAOGN,EAAiBJ,KAAI,SAAAoB,GAAI,OACxB,wBAAQL,MAAOK,EAAf,SACGA,WAMT,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MDlEuB,GCmEvBC,QAASsB,EACTrB,YAAaA,EACbC,aA7CmB,SAACa,GACxBS,EAAeT,MA+Cb,6BACGY,EAAab,KAAI,SAAAoB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,wBACWA,cC1ErBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fa0da724.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = getNumbers(1, Math.ceil(total / perPage));\n  const isFirstPage = currentPage === 1;\n  const isLastPage = pagesCount.length === currentPage;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: isFirstPage,\n        },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => {\n            if (!isFirstPage) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pagesCount.map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            {\n              active: currentPage === page,\n            },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: isLastPage,\n        },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => {\n            if (!isLastPage) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { getNumbers } from './utils';\n\nexport const totalItemsCount = 42;\n\nexport const items = getNumbers(1, totalItemsCount)\n  .map(n => `Item ${n}`);\n\nexport const itemsPerPageList = [3, 5, 10, 20];\nexport const defaultItemsPerPage = itemsPerPageList[1];\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nimport { Pagination } from './components/Pagination';\n\nimport {\n  items,\n  itemsPerPageList,\n  totalItemsCount,\n  defaultItemsPerPage,\n} from './constants';\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(defaultItemsPerPage);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  let endItem = currentPage * itemsPerPage;\n  const startItem = endItem - itemsPerPage + 1;\n\n  if (endItem > items.length) {\n    endItem = items.length;\n  }\n\n  const visibleItems = getNumbers(startItem, endItem);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleItemsPerPageChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setItemsPerPage(Number(value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPageChange}\n          >\n            {itemsPerPageList.map(item => (\n              <option value={item}>\n                {item}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItemsCount}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\">\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}